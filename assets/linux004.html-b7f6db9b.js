import{_ as l,r as i,o as c,c as o,a as s,b as e,w as t,d as n,e as r}from"./app-c1c3c937.js";const p={},d=s("h2",{id:"目录",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#目录","aria-hidden":"true"},"#"),n(" 目录")],-1),u={class:"table-of-contents"},v=r(`<h2 id="linux-运行-systemctl-配置服务自启动" tabindex="-1"><a class="header-anchor" href="#linux-运行-systemctl-配置服务自启动" aria-hidden="true">#</a> linux 运行 systemctl 配置服务自启动</h2><h3 id="centos-8-2-环境配置" tabindex="-1"><a class="header-anchor" href="#centos-8-2-环境配置" aria-hidden="true">#</a> CentOS 8.2 环境配置</h3><h4 id="手动部署lnmp环境-alibaba-cloud-linux-3-2、centos-7-8" tabindex="-1"><a class="header-anchor" href="#手动部署lnmp环境-alibaba-cloud-linux-3-2、centos-7-8" aria-hidden="true">#</a> 手动部署LNMP环境（Alibaba Cloud Linux 3/2、CentOS 7/8）</h4><p><code>https://help.aliyun.com/zh/ecs/use-cases/manually-build-an-lnmp-environment-on-a-centos-instance#c1da26332bjf3</code></p><h4 id="centos-8-eol如何切换源" tabindex="-1"><a class="header-anchor" href="#centos-8-eol如何切换源" aria-hidden="true">#</a> CentOS 8 EOL如何切换源</h4><p><code>https://help.aliyun.com/zh/ecs/user-guide/change-centos-8-repository-addresses?spm=a2c4g.11186623.0.i11#task-2182261</code></p><h3 id="常用指令" tabindex="-1"><a class="header-anchor" href="#常用指令" aria-hidden="true">#</a> 常用指令</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> <span class="token number">777</span> xxx.service                     <span class="token comment">#添加可执行权限</span>
<span class="token function">sudo</span> systemctl start xxx.service     <span class="token comment">#运行xxx.service守护进程</span>
<span class="token function">sudo</span> systemctl stop xxx.service      <span class="token comment">#停止xxx.service守护进程</span>
<span class="token function">sudo</span> systemctl restart xxx.service   <span class="token comment">#重启xxx.service守护进程</span>
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> xxx.service    <span class="token comment">#设置xxx.service开机自启动</span>
<span class="token function">sudo</span> systemctl disable xxx.service   <span class="token comment">#取消开机自启</span>
<span class="token function">sudo</span> systemctl status xxx.service    <span class="token comment">#查看xxx.service的运行状态</span>
<span class="token function">sudo</span> systemctl is-active xxx.service         <span class="token comment">#仅显示是否Active</span>
<span class="token function">sudo</span> systemctl list-units <span class="token parameter variable">--type</span><span class="token operator">=</span>service      <span class="token comment">#显示全部已经启动的服务</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="net8-程序应用" tabindex="-1"><a class="header-anchor" href="#net8-程序应用" aria-hidden="true">#</a> .net8 程序应用</h3><p>在的目录 <code>/usr/lib/systemd/system</code> 或者 <code>/etc/systemd/system</code> 创建文件 xxxx.service</p><p>参考 <a href="%22https://blog.csdn.net/shangxiaqiusuo1/article/details/124437676%22">原文链接：</a></p><h3 id="配置说明" tabindex="-1"><a class="header-anchor" href="#配置说明" aria-hidden="true">#</a> 配置说明</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>     				
<span class="token assign-left variable">Description</span><span class="token operator">=</span>demo	                  <span class="token comment">#当前配置文件的描述信息</span>
<span class="token assign-left variable">After</span><span class="token operator">=</span>network.target nginx.service    <span class="token comment">#表示当前服务是在那个服务后面启动，一般定义为网络服务启动后启动</span>
 
<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
<span class="token assign-left variable">WorkingDirectory</span><span class="token operator">=</span>/home/test                <span class="token comment">#工作目录				</span>
<span class="token assign-left variable">Type</span><span class="token operator">=</span>forking			                   <span class="token comment">#定义启动类型 </span>
<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/home/test/demo-start.sh 	       <span class="token comment">#定义启动进程时执行的命令。</span>
<span class="token assign-left variable">ExecReload</span><span class="token operator">=</span>/home/test/demo-restart.sh      <span class="token comment">#重启服务时执行的命令</span>
<span class="token assign-left variable">ExecStop</span><span class="token operator">=</span>/home/test/demo-stop.sh		   <span class="token comment">#定义关闭进程时执行的命令。</span>
<span class="token assign-left variable">PrivateTmp</span><span class="token operator">=</span>true							   <span class="token comment">#是否分配独立空间</span>
<span class="token assign-left variable">Restart</span><span class="token operator">=</span>always
<span class="token assign-left variable">RestartSec</span><span class="token operator">=</span><span class="token number">5</span>
<span class="token assign-left variable">StartLimitInterval</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token assign-left variable">StartLimitBurst</span><span class="token operator">=</span><span class="token number">5</span>
 
<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>
<span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target    <span class="token comment">#表示多用户命令行状态</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Type字段：定义启动类型。它可以设置的值如下：
         - simple（默认值）：ExecStart字段启动的进程为主进程
         - forking：后台执行，ExecStart字段将以fork<span class="token punctuation">(</span><span class="token punctuation">)</span>方式启动，此时父进程将会退出，子进程将成                           为主进程
         - oneshot：类似于simple，但只执行一次，Systemd 会等它执行完，才启动其他服务
         - dbus：类似于simple，但会等待 D-Bus 信号后启动
         - notify：类似于simple，启动结束后会发出通知信号，然后 Systemd 再启动其他服务
         - idle：类似于simple，但是要等到其他任务都执行完，才会启动该服务。一种使用场合是为                      让该服务的输出，不与其他服务的输出相混
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="net8-程序应用-1" tabindex="-1"><a class="header-anchor" href="#net8-程序应用-1" aria-hidden="true">#</a> .net8 程序应用</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>
<span class="token comment">#服务描述</span>
<span class="token assign-left variable">Description</span><span class="token operator">=</span>ApsNet Core <span class="token number">8</span>  Pgy EntWebSite
<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
<span class="token assign-left variable">User</span><span class="token operator">=</span>root
<span class="token assign-left variable">Group</span><span class="token operator">=</span>root
<span class="token assign-left variable">WorkingDirectory</span><span class="token operator">=</span>/root/web_site/publish
<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/root/.dotnet/dotnet  /root/web_site/publish/Ent.WebSite.dll <span class="token parameter variable">--urls</span><span class="token operator">=</span>http://localhost:5000
<span class="token assign-left variable">Restart</span><span class="token operator">=</span>always
<span class="token assign-left variable">RestartSec</span><span class="token operator">=</span><span class="token number">10</span>
<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>
<span class="token comment">#多用户</span>
<span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="二进制编译-nginx-配置-开机重启配置服务" tabindex="-1"><a class="header-anchor" href="#二进制编译-nginx-配置-开机重启配置服务" aria-hidden="true">#</a> 二进制编译 nginx 配置 开机重启配置服务</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>
<span class="token assign-left variable">Description</span><span class="token operator">=</span>nginx <span class="token function">service</span>
<span class="token assign-left variable">After</span><span class="token operator">=</span>network.target
<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
<span class="token assign-left variable">Type</span><span class="token operator">=</span>forking
<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/local/nginx/sbin/nginx
<span class="token assign-left variable">ExecReload</span><span class="token operator">=</span>/usr/local/nginx/sbin/nginx <span class="token parameter variable">-s</span> reload
<span class="token assign-left variable">ExecStop</span><span class="token operator">=</span>/usr/local/nginx/sbin/nginx <span class="token parameter variable">-s</span> stop
<span class="token assign-left variable">PrivateTmp</span><span class="token operator">=</span>true
<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>
<span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18);function m(b,k){const a=i("router-link");return c(),o("div",null,[d,s("nav",u,[s("ul",null,[s("li",null,[e(a,{to:"#目录"},{default:t(()=>[n("目录")]),_:1})]),s("li",null,[e(a,{to:"#linux-运行-systemctl-配置服务自启动"},{default:t(()=>[n("linux 运行 systemctl 配置服务自启动")]),_:1}),s("ul",null,[s("li",null,[e(a,{to:"#centos-8-2-环境配置"},{default:t(()=>[n("CentOS 8.2 环境配置")]),_:1})]),s("li",null,[e(a,{to:"#常用指令"},{default:t(()=>[n("常用指令")]),_:1})]),s("li",null,[e(a,{to:"#net8-程序应用"},{default:t(()=>[n(".net8 程序应用")]),_:1})]),s("li",null,[e(a,{to:"#配置说明"},{default:t(()=>[n("配置说明")]),_:1})])])])])]),v])}const x=l(p,[["render",m],["__file","linux004.html.vue"]]);export{x as default};
