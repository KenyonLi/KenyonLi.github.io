const l=JSON.parse('{"key":"v-5787479d","path":"/technology/back_end/kafka/kafka01.html","title":"分布式中间件-消息中间件Kafka介绍（一）","lang":"en-US","frontmatter":{"title":"分布式中间件-消息中间件Kafka介绍（一）","date":"2023-08-07T00:00:00.000Z","tags":["dotnet core","C#","中间件","分布式中间件-消息中间件Kafka介绍（一）"],"categories":["C#"]},"headers":[{"level":2,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":2,"title":"什么是Kafka","slug":"什么是kafka","link":"#什么是kafka","children":[]},{"level":2,"title":"什么是消息","slug":"什么是消息","link":"#什么是消息","children":[]},{"level":2,"title":"什么是队列","slug":"什么是队列","link":"#什么是队列","children":[]},{"level":2,"title":"什么是消息队列","slug":"什么是消息队列","link":"#什么是消息队列","children":[]},{"level":2,"title":"什么地方使用Kafka","slug":"什么地方使用kafka","link":"#什么地方使用kafka","children":[]},{"level":2,"title":"微服务系统中为什么要使用Kafka","slug":"微服务系统中为什么要使用kafka","link":"#微服务系统中为什么要使用kafka","children":[]},{"level":2,"title":"微服务系统中如何落地Kafka","slug":"微服务系统中如何落地kafka","link":"#微服务系统中如何落地kafka","children":[{"level":3,"title":"创建订单业务场景落地","slug":"创建订单业务场景落地","link":"#创建订单业务场景落地","children":[]},{"level":3,"title":"创建订单业务场景落地-情况1","slug":"创建订单业务场景落地-情况1","link":"#创建订单业务场景落地-情况1","children":[]},{"level":3,"title":"创建订单业务场景落地-情况2","slug":"创建订单业务场景落地-情况2","link":"#创建订单业务场景落地-情况2","children":[]},{"level":3,"title":"创建订单业务场景落地-情况3","slug":"创建订单业务场景落地-情况3","link":"#创建订单业务场景落地-情况3","children":[]},{"level":3,"title":"创建订单，同时发送短信业务场景落地(订阅发布)","slug":"创建订单-同时发送短信业务场景落地-订阅发布","link":"#创建订单-同时发送短信业务场景落地-订阅发布","children":[]},{"level":3,"title":"创建订单，订单消息堆积场景落地","slug":"创建订单-订单消息堆积场景落地","link":"#创建订单-订单消息堆积场景落地","children":[]},{"level":3,"title":"创建订单----订单消息延迟处理场景落地","slug":"创建订单-订单消息延迟处理场景落地","link":"#创建订单-订单消息延迟处理场景落地","children":[]}]},{"level":2,"title":"扩展","slug":"扩展","link":"#扩展","children":[]}],"git":{},"filePathRelative":"technology/back_end/kafka/kafka01.md"}');export{l as data};
