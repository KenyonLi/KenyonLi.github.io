import{_ as r,r as d,o as c,c as u,a,b as n,w as i,d as e,e as t}from"./app-c1c3c937.js";const o={},p=a("h2",{id:"目录",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#目录","aria-hidden":"true"},"#"),e(" 目录")],-1),h={class:"table-of-contents"},m=a("h2",{id:"linux",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#linux","aria-hidden":"true"},"#"),e(" linux")],-1),v={class:"custom-container tip"},b=a("p",{class:"custom-container-title"},"linux 下使用 vim 卡死原因与解决方法",-1),g={href:"https://so.csdn.net/so/search?q=linux&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},f=a("p",null,"在vim 中，Ctrl + S 是锁屏快捷键， Ctrl+ q 解锁",-1),k=t(`<h2 id="修改文件目录权限" tabindex="-1"><a class="header-anchor" href="#修改文件目录权限" aria-hidden="true">#</a> 修改文件目录权限</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#-R, --recursive  递归操作文件和目录</span>
<span class="token function">chown</span> <span class="token parameter variable">-R</span> <span class="token number">777</span> 文件目录
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ubuntu-开启后台守护线程" tabindex="-1"><a class="header-anchor" href="#ubuntu-开启后台守护线程" aria-hidden="true">#</a> Ubuntu 开启后台守护线程</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 开启守护</span>
<span class="token function">sudo</span> <span class="token function">nohup</span> 你的指令 <span class="token operator">&amp;</span>
<span class="token comment">#如果要关闭，先查看程序的id</span>
<span class="token function">netstat</span> <span class="token parameter variable">-tanlp</span>
<span class="token comment">#关闭程序</span>
<span class="token function">sudo</span> <span class="token function">kill</span> <span class="token function">id</span> <span class="token parameter variable">-9</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="在centos系统下包更新的命令" tabindex="-1"><a class="header-anchor" href="#在centos系统下包更新的命令" aria-hidden="true">#</a> 在CentOS系统下包更新的命令</h2><h3 id="一、-更新和升级yum-update-全部更新" tabindex="-1"><a class="header-anchor" href="#一、-更新和升级yum-update-全部更新" aria-hidden="true">#</a> 一、 更新和升级yum update 全部更新</h3><p>yum update package1 更新指定程序包package1</p><p>yum check-update 检查可更新的程序</p><p>yum upgrade package1 升级指定程序包package1</p><p>yum groupupdate group1 升级程序组group1</p><p>更多命令</p><h3 id="二、安装yum-install-全部安装" tabindex="-1"><a class="header-anchor" href="#二、安装yum-install-全部安装" aria-hidden="true">#</a> 二、安装yum install 全部安装</h3><p><code>yum install package1</code> 安装指定的安装包package1</p><p>yum groupinsall group1 安装程序组group1</p><h3 id="三、查找和显示yum-info-package1-显示安装包信息package1" tabindex="-1"><a class="header-anchor" href="#三、查找和显示yum-info-package1-显示安装包信息package1" aria-hidden="true">#</a> 三、查找和显示yum info package1 显示安装包信息package1</h3><p>yum list 显示所有已经安装和可以安装的程序包</p><p>yum list package1 显示指定程序包安装情况package1</p><p>yum groupinfo group1 显示程序组group1信息yum search string 根据关键字string查找安装包</p><h3 id="四、删除程序yum-remove-erase-package1-删除程序包package1" tabindex="-1"><a class="header-anchor" href="#四、删除程序yum-remove-erase-package1-删除程序包package1" aria-hidden="true">#</a> 四、删除程序yum remove | erase package1 删除程序包package1</h3><p>yum groupremove group1 删除程序组group1</p><p>yum deplist package1 查看程序package1依赖情况</p><h3 id="五、清除缓存yum-clean-packages-清除缓存目录下的软件包" tabindex="-1"><a class="header-anchor" href="#五、清除缓存yum-clean-packages-清除缓存目录下的软件包" aria-hidden="true">#</a> 五、清除缓存yum clean packages 清除缓存目录下的软件包</h3><p>yum clean headers 清除缓存目录下的 headers</p><p>yum clean oldheaders 清除缓存目录下旧的 headers</p><p>yum clean, yum clean all (= yum clean packages; yum clean oldheaders) 清除缓存目录下的软件包及旧的headers</p><h3 id="六、源操作yum-repolist-repolist-all-列出所有源" tabindex="-1"><a class="header-anchor" href="#六、源操作yum-repolist-repolist-all-列出所有源" aria-hidden="true">#</a> 六、源操作yum repolist/repolist all 列出所有源</h3><p>yum -enablerepo=fedora-source install package1 从fedora-source源中安装包package1</p><h3 id="七、yum-shellyum-shll-进去yum的shell环境" tabindex="-1"><a class="header-anchor" href="#七、yum-shellyum-shll-进去yum的shell环境" aria-hidden="true">#</a> 七、Yum Shellyum shll 进去yum的shell环境</h3><h2 id="硬盘挂载、分区、格式化为ext4格式" tabindex="-1"><a class="header-anchor" href="#硬盘挂载、分区、格式化为ext4格式" aria-hidden="true">#</a> 硬盘挂载、分区、格式化为ext4格式</h2>`,29),x={href:"https://blog.csdn.net/hochoy/article/details/80751839",target:"_blank",rel:"noopener noreferrer"},_=a("br",null,null,-1),y=a("code",null,"Parted",-1),z=a("br",null,null,-1),j=a("code",null,"fdisk",-1),w=a("br",null,null,-1),C=a("code",null,"mkfs.ext4",-1),S=a("code",null,"mount",-1),P=a("h2",{id:"ssh-免密码登录",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#ssh-免密码登录","aria-hidden":"true"},"#"),e(" ssh 免密码登录")],-1),Z={href:"https://www.cnblogs.com/kluan/p/4453851.html",target:"_blank",rel:"noopener noreferrer"},N=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>生成密钥
ssh-keygen <span class="token parameter variable">-t</span> rsa
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>-t指定要创建的密钥类型，默认就是rsa了，所以只执行ssh-keygen是一样的。</p><p>期间会提示你输入你私钥的加密密码。如果需要完全脱离密码，此处可留空，直接回车，否则以后每次连接需要本地解锁。</p><p>完成后，会当前用户的主目录下的~/.ssh/路径下生成两个文件id_rsa与id_rsa.pub分别是私钥与公钥。</p><p>接下来，要把生成的公钥上传到服务器上，同样还是在客户端执行以下的代码。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> ssh-copy-id <span class="token parameter variable">-i</span> ~/.ssh/id_rsa.pub root@192.168.1.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中root可以修改为你想要自动登录的服务器端用户名，192.168.1.1修改为你的VPS主机名或IP地址。</p><p>最后，ssh登录远程服务器。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">ssh</span> root@192.168.1.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="zip-压缩解压文件" tabindex="-1"><a class="header-anchor" href="#zip-压缩解压文件" aria-hidden="true">#</a> zip 压缩解压文件</h2><p>1、<code>zip</code> 压缩文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">zip</span> <span class="token parameter variable">-r</span> myfile.zip ./* 将当前目录下的所有文件和文件夹全部压缩成myfile.zip文件,－r表示递归压缩子目录下所有文件.


<span class="token comment">### -r </span>
<span class="token function">zip</span> <span class="token parameter variable">-r</span> myfile.zip ./* 将当前目录下的所有文件和文件夹全部压缩成myfile.zip文件,－r表示递归压缩子目录下所有文件.

<span class="token comment">### -d</span>
<span class="token function">zip</span> <span class="token parameter variable">-d</span> myfile.zip smart.txt 删除压缩文件中smart.txt文件 <span class="token function">zip</span> <span class="token parameter variable">-m</span> myfile.zip ./rpm_info.txt 向压缩文件中myfile.zip中添加rpm_info.txt文件 ---
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、<code>unzip</code> 解压文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## 解压zip文件到当前目录</span>
<span class="token function">unzip</span> filename.zip   

<span class="token function">unzip</span>
<span class="token function">unzip</span> <span class="token parameter variable">-o</span> <span class="token parameter variable">-d</span> /home/sunny myfile.zip
把myfile.zip文件解压到 /home/sunny/
-o:不提示的情况下覆盖文件；
<span class="token parameter variable">-d:-d</span> /home/sunny 指明将文件解压缩到/home/sunny目录下；
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-d 目录名</td><td>将压缩文件解压到指定目录下。</td></tr><tr><td>-n</td><td>解压时并不覆盖已经存在的文件。</td></tr><tr><td>-o</td><td>解压时覆盖已经存在的文件，并且无需用户确认。</td></tr><tr><td>-v</td><td>查看压缩文件的详细信息，包括压缩文件中包含的文件大小、文件名以及压缩比等，但并不做解压操作。</td></tr><tr><td>-t</td><td>测试压缩文件有无损坏，但并不解压。</td></tr><tr><td>-x 文件列表</td><td>解压文件，但不包含文件列表中指定的文件。</td></tr></tbody></table><h2 id="tar-压缩解压文件" tabindex="-1"><a class="header-anchor" href="#tar-压缩解压文件" aria-hidden="true">#</a> tar 压缩解压文件</h2><p>tar 命令详解</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>　　-c: 建立压缩档案  

　　-x：解压  

　　-t：查看内容  

　　-r：向压缩归档文件末尾追加文件  

　　-u：更新原压缩包中的文件  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。下面的参数是根据需要在压缩或解压档案时可选的。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>　　-c: 建立压缩档案
　　-x：解压
　　-t：查看内容
　　-r：向压缩归档文件末尾追加文件
　　-u：更新原压缩包中的文件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面的参数-f是必须的</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>　　-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。
　　<span class="token comment"># tar -cf all.tar *.jpg</span>
　　这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文件名。
　　<span class="token comment"># tar -rf all.tar *.gif</span>
　　这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思。
　　<span class="token comment"># tar -uf all.tar logo.gif</span>
　　这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。
　　<span class="token comment"># tar -tf all.tar</span>
　　这条命令是列出all.tar包中所有文件，-t是列出文件的意思
　　<span class="token comment"># tar -xf all.tar</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1、压缩</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>　　<span class="token function">tar</span> –cvf jpg.tar *.jpg //将目录里所有jpg文件打包成tar.jpg
　　<span class="token function">tar</span> –czf jpg.tar.gz *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为jpg.tar.gz
　　<span class="token function">tar</span> –cjf jpg.tar.bz2 *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为jpg.tar.bz2
　　<span class="token function">tar</span> –cZf jpg.tar.Z *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z
　　<span class="token function">rar</span> a jpg.rar *.jpg //rar格式的压缩，需要先下载rar <span class="token keyword">for</span> linux
　　<span class="token function">zip</span> jpg.zip *.jpg //zip格式的压缩，需要先下载zip <span class="token keyword">for</span> linux
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、解压</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>　　<span class="token function">tar</span> –xvf file.tar //解压 tar包
　　<span class="token function">tar</span> <span class="token parameter variable">-xzvf</span> file.tar.gz //解压tar.gz
　　<span class="token function">tar</span> <span class="token parameter variable">-xjvf</span> file.tar.bz2 //解压 tar.bz2
　　<span class="token function">tar</span> –xZvf file.tar.Z //解压tar.Z
　　<span class="token function">unrar</span> e file.rar //解压rar
　　<span class="token function">unzip</span> file.zip //解压zip
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>总结</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>　　<span class="token number">1</span>、*.tar 用 <span class="token function">tar</span> –xvf 解压
　　<span class="token number">2</span>、*.gz 用 <span class="token function">gzip</span> -d或者gunzip 解压
　　<span class="token number">3</span>、.tar.gz和.tgz 用 <span class="token function">tar</span> –xzf 解压
　　<span class="token number">4</span>、*.bz2 用 <span class="token function">bzip2</span> -d或者用bunzip2 解压
　　<span class="token number">5</span>、*.tar.bz2用tar –xjf 解压
　　<span class="token number">6</span>、*.Z 用 uncompress 解压
　　<span class="token number">7</span>、*.tar.Z 用tar –xZf 解压
　　<span class="token number">8</span>、*.rar 用 <span class="token function">unrar</span> e解压
　　<span class="token number">9</span>、*.zip 用 <span class="token function">unzip</span> 解压
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用netdiscover和fping进行探测局域网络中的机器" tabindex="-1"><a class="header-anchor" href="#使用netdiscover和fping进行探测局域网络中的机器" aria-hidden="true">#</a> 使用netdiscover和fping进行探测局域网络中的机器</h2><p>主动 netdiscover -i eht0 -r 192.168.2.0/34<br> 被动 netdiscover -p</p><p>fping -ag 192.168.1.0/24 &gt; fping.txt</p><h2 id="linux-文件目录" tabindex="-1"><a class="header-anchor" href="#linux-文件目录" aria-hidden="true">#</a> linux 文件目录</h2><p>核心文件结构<br> bin 执行文件 —— 执行软件<br> etc 存储配置地方 —— 软件配置<br> home 用户目录 —— 用户操作的目录 root根用户目录 —— 超级用户名称 sbin 系统管理的执行命令 —— 存储软件执行软件<br> usr 安装软件地方 —— 安装软件存储的位置 var 日志文件 —— 存储软件日志</p><h2 id="添加useradd用户" tabindex="-1"><a class="header-anchor" href="#添加useradd用户" aria-hidden="true">#</a> 添加<code>useradd</code>用户</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">useradd</span> kenyonli  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="删除用户" tabindex="-1"><a class="header-anchor" href="#删除用户" aria-hidden="true">#</a> 删除用户</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">userdel</span> 用户名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="查询用户信息" tabindex="-1"><a class="header-anchor" href="#查询用户信息" aria-hidden="true">#</a> 查询用户信息</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">id</span> 用户名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="切换用户-su" tabindex="-1"><a class="header-anchor" href="#切换用户-su" aria-hidden="true">#</a> 切换用户 <code>su</code></h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">su</span> - kenyonli  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注：从权限高的切换到权限低的不需要密码，反之需要输入密码。</p><h2 id="查看当前用户" tabindex="-1"><a class="header-anchor" href="#查看当前用户" aria-hidden="true">#</a> 查看当前用户</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">whoami</span> 或者 <span class="token function">who</span> am i
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="给用户添加密码-passwd" tabindex="-1"><a class="header-anchor" href="#给用户添加密码-passwd" aria-hidden="true">#</a> 给用户添加密码 <code>passwd</code></h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">passwd</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>给指定用户修改密码<br> 注：pwd 命令可以西安市当前用户所在目录。</p><h2 id="查看-用户信息" tabindex="-1"><a class="header-anchor" href="#查看-用户信息" aria-hidden="true">#</a> 查看 用户信息</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">id</span> kenyonli   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="修改用户组" tabindex="-1"><a class="header-anchor" href="#修改用户组" aria-hidden="true">#</a> 修改用户组</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">usermod</span> <span class="token parameter variable">-g</span> <span class="token operator">&lt;</span>组名 <span class="token operator">&gt;</span> <span class="token operator">&lt;</span>用户<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="文件授权" tabindex="-1"><a class="header-anchor" href="#文件授权" aria-hidden="true">#</a> 文件授权</h2><h2 id="修改文件使用的用户权限和组" tabindex="-1"><a class="header-anchor" href="#修改文件使用的用户权限和组" aria-hidden="true">#</a> 修改文件使用的用户权限和组</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chown</span> <span class="token parameter variable">-R</span> <span class="token operator">&lt;</span>用户名称<span class="token operator">&gt;</span> <span class="token builtin class-name">:</span> <span class="token operator">&lt;</span>组<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>文件<span class="token operator">&gt;</span>   读写权限   

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="groupdel-用户组" tabindex="-1"><a class="header-anchor" href="#groupdel-用户组" aria-hidden="true">#</a> groupdel 用户组</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">groupdel</span> <span class="token builtin class-name">test</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="添加用户到组" tabindex="-1"><a class="header-anchor" href="#添加用户到组" aria-hidden="true">#</a> 添加用户到组</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">useradd</span> <span class="token parameter variable">-g</span> <span class="token builtin class-name">test</span> tony11
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="centos-9-stream-关闭防火墙" tabindex="-1"><a class="header-anchor" href="#centos-9-stream-关闭防火墙" aria-hidden="true">#</a> centos 9 stream 关闭防火墙</h2><h3 id="只关闭此次" tabindex="-1"><a class="header-anchor" href="#只关闭此次" aria-hidden="true">#</a> 只关闭此次</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl stop firewalld.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="关闭防火墙" tabindex="-1"><a class="header-anchor" href="#关闭防火墙" aria-hidden="true">#</a> 关闭防火墙</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl disable firewalld.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="查看firewalld服务状态-active为dead-则表示已经永久关闭" tabindex="-1"><a class="header-anchor" href="#查看firewalld服务状态-active为dead-则表示已经永久关闭" aria-hidden="true">#</a> 查看firewalld服务状态，active为dead，则表示已经永久关闭</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl status firewalld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>可以看到是绿色的，就是运行中</strong></p><h2 id="查看-网络端口" tabindex="-1"><a class="header-anchor" href="#查看-网络端口" aria-hidden="true">#</a> 查看 网络端口</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">lsof</span> <span class="token parameter variable">-i:8099</span>  
<span class="token function">netstat</span> -anp<span class="token operator">|</span><span class="token function">grep</span> <span class="token number">8099</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="当前系统的版本" tabindex="-1"><a class="header-anchor" href="#当前系统的版本" aria-hidden="true">#</a> 当前系统的版本</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cat /etc/redhat-release</span>
CentOS Stream release <span class="token number">9</span>


<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># uname -r</span>
<span class="token number">5.14</span>.0-350.el9.x86_64
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># uname -a</span>
Linux localhost.localdomain <span class="token number">5.14</span>.0-350.el9.x86_64 <span class="token comment">#1 SMP PREEMPT_DYNAMIC Fri Aug 4 12:40:09 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux</span>


<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cat /proc/version</span>
Linux version <span class="token number">5.14</span>.0-350.el9.x86_64 <span class="token punctuation">(</span>mockbuild@x86-05.stream.rdu2.redhat.com<span class="token punctuation">)</span> <span class="token punctuation">(</span>gcc <span class="token punctuation">(</span>GCC<span class="token punctuation">)</span> <span class="token number">11.4</span>.1 <span class="token number">20230605</span> <span class="token punctuation">(</span>Red Hat <span class="token number">11.4</span>.1-2<span class="token punctuation">)</span>, GNU ld version <span class="token number">2.35</span>.2-42.el9<span class="token punctuation">)</span> <span class="token comment">#1 SMP PREEMPT_DYNAMIC Fri Aug 4 12:40:09 UTC 2023</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查看应用安装位置的指令" tabindex="-1"><a class="header-anchor" href="#查看应用安装位置的指令" aria-hidden="true">#</a> 查看应用安装位置的指令</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>find、whereis、which、locate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,72);function E(T,M){const s=d("router-link"),l=d("ExternalLinkIcon");return c(),u("div",null,[p,a("nav",h,[a("ul",null,[a("li",null,[n(s,{to:"#目录"},{default:i(()=>[e("目录")]),_:1})]),a("li",null,[n(s,{to:"#linux"},{default:i(()=>[e("linux")]),_:1})]),a("li",null,[n(s,{to:"#修改文件目录权限"},{default:i(()=>[e("修改文件目录权限")]),_:1})]),a("li",null,[n(s,{to:"#ubuntu-开启后台守护线程"},{default:i(()=>[e("Ubuntu 开启后台守护线程")]),_:1})]),a("li",null,[n(s,{to:"#在centos系统下包更新的命令"},{default:i(()=>[e("在CentOS系统下包更新的命令")]),_:1}),a("ul",null,[a("li",null,[n(s,{to:"#一、-更新和升级yum-update-全部更新"},{default:i(()=>[e("一、 更新和升级yum update 全部更新")]),_:1})]),a("li",null,[n(s,{to:"#二、安装yum-install-全部安装"},{default:i(()=>[e("二、安装yum install 全部安装")]),_:1})]),a("li",null,[n(s,{to:"#三、查找和显示yum-info-package1-显示安装包信息package1"},{default:i(()=>[e("三、查找和显示yum info package1 显示安装包信息package1")]),_:1})]),a("li",null,[n(s,{to:"#四、删除程序yum-remove-erase-package1-删除程序包package1"},{default:i(()=>[e("四、删除程序yum remove | erase package1 删除程序包package1")]),_:1})]),a("li",null,[n(s,{to:"#五、清除缓存yum-clean-packages-清除缓存目录下的软件包"},{default:i(()=>[e("五、清除缓存yum clean packages 清除缓存目录下的软件包")]),_:1})]),a("li",null,[n(s,{to:"#六、源操作yum-repolist-repolist-all-列出所有源"},{default:i(()=>[e("六、源操作yum repolist/repolist all 列出所有源")]),_:1})]),a("li",null,[n(s,{to:"#七、yum-shellyum-shll-进去yum的shell环境"},{default:i(()=>[e("七、Yum Shellyum shll 进去yum的shell环境")]),_:1})])])]),a("li",null,[n(s,{to:"#硬盘挂载、分区、格式化为ext4格式"},{default:i(()=>[e("硬盘挂载、分区、格式化为ext4格式")]),_:1})]),a("li",null,[n(s,{to:"#ssh-免密码登录"},{default:i(()=>[e("ssh 免密码登录")]),_:1})]),a("li",null,[n(s,{to:"#zip-压缩解压文件"},{default:i(()=>[e("zip 压缩解压文件")]),_:1})]),a("li",null,[n(s,{to:"#tar-压缩解压文件"},{default:i(()=>[e("tar 压缩解压文件")]),_:1})]),a("li",null,[n(s,{to:"#使用netdiscover和fping进行探测局域网络中的机器"},{default:i(()=>[e("使用netdiscover和fping进行探测局域网络中的机器")]),_:1})]),a("li",null,[n(s,{to:"#linux-文件目录"},{default:i(()=>[e("linux 文件目录")]),_:1})]),a("li",null,[n(s,{to:"#添加useradd用户"},{default:i(()=>[e("添加useradd用户")]),_:1})]),a("li",null,[n(s,{to:"#删除用户"},{default:i(()=>[e("删除用户")]),_:1})]),a("li",null,[n(s,{to:"#查询用户信息"},{default:i(()=>[e("查询用户信息")]),_:1})]),a("li",null,[n(s,{to:"#切换用户-su"},{default:i(()=>[e("切换用户 su")]),_:1})]),a("li",null,[n(s,{to:"#查看当前用户"},{default:i(()=>[e("查看当前用户")]),_:1})]),a("li",null,[n(s,{to:"#给用户添加密码-passwd"},{default:i(()=>[e("给用户添加密码 passwd")]),_:1})]),a("li",null,[n(s,{to:"#查看-用户信息"},{default:i(()=>[e("查看 用户信息")]),_:1})]),a("li",null,[n(s,{to:"#修改用户组"},{default:i(()=>[e("修改用户组")]),_:1})]),a("li",null,[n(s,{to:"#文件授权"},{default:i(()=>[e("文件授权")]),_:1})]),a("li",null,[n(s,{to:"#修改文件使用的用户权限和组"},{default:i(()=>[e("修改文件使用的用户权限和组")]),_:1})]),a("li",null,[n(s,{to:"#groupdel-用户组"},{default:i(()=>[e("groupdel 用户组")]),_:1})]),a("li",null,[n(s,{to:"#添加用户到组"},{default:i(()=>[e("添加用户到组")]),_:1})]),a("li",null,[n(s,{to:"#centos-9-stream-关闭防火墙"},{default:i(()=>[e("centos 9 stream 关闭防火墙")]),_:1}),a("ul",null,[a("li",null,[n(s,{to:"#只关闭此次"},{default:i(()=>[e("只关闭此次")]),_:1})]),a("li",null,[n(s,{to:"#关闭防火墙"},{default:i(()=>[e("关闭防火墙")]),_:1})]),a("li",null,[n(s,{to:"#查看firewalld服务状态-active为dead-则表示已经永久关闭"},{default:i(()=>[e("查看firewalld服务状态，active为dead，则表示已经永久关闭")]),_:1})])])]),a("li",null,[n(s,{to:"#查看-网络端口"},{default:i(()=>[e("查看 网络端口")]),_:1})]),a("li",null,[n(s,{to:"#当前系统的版本"},{default:i(()=>[e("当前系统的版本")]),_:1}),a("ul",null,[a("li",null,[n(s,{to:"#查看应用安装位置的指令"},{default:i(()=>[e("查看应用安装位置的指令")]),_:1})])])])])]),m,a("div",v,[b,a("blockquote",null,[a("p",null,[e("我们在"),a("a",g,[e("linux"),n(l)]),e(" 下使用vim 编辑文件时，习惯性的使用了 Ctrl + s ， 导致vim 僵死，无法编辑，此时只需要使用 Ctrl + q 解除即可。")]),f])]),k,a("p",null,[a("a",x,[e("硬盘挂载、分区、格式化为ext4格式"),n(l)]),_,e(" 硬盘分区分两种情况：当硬盘磁盘空间<2T时，使用此种方式没有问题，当硬盘磁盘空间>2T时，使用此种方式可能会出现问题，这种情况下使用"),y,e("磁盘分区及挂载"),z,e(" 第一步：添加硬盘、新建分区（"),j,e("）(此步骤非必须)"),w,e(" 第二步：格式化分区（"),C,e("） 第三步：加载分区（"),S,e("）")]),P,a("p",null,[a("a",Z,[e("免密码登录 "),n(l)]),e(" 在客户端生成私钥、公钥（注意，在客户端完成）：")]),N])}const U=r(o,[["render",E],["__file","index.html.vue"]]);export{U as default};
