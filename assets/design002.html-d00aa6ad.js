const l=JSON.parse('{"key":"v-3e54353c","path":"/technology/architecture_design_analysis/design/design002.html","title":"设计模式-应用场景和优缺点","lang":"en-US","frontmatter":{"title":"设计模式-应用场景和优缺点","date":"2024-03-12","tags":["设计模式","abp","dotnet","docker"],"categories":["技术"]},"headers":[{"level":2,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":2,"title":"设计模式-应用场景和优缺点","slug":"设计模式-应用场景和优缺点","link":"#设计模式-应用场景和优缺点","children":[{"level":3,"title":"工厂模式","slug":"工厂模式","link":"#工厂模式","children":[]},{"level":3,"title":"抽象工厂模式","slug":"抽象工厂模式","link":"#抽象工厂模式","children":[]},{"level":3,"title":"策略模式","slug":"策略模式","link":"#策略模式","children":[]},{"level":3,"title":"建造者模式","slug":"建造者模式","link":"#建造者模式","children":[]},{"level":3,"title":"装饰器","slug":"装饰器","link":"#装饰器","children":[]},{"level":3,"title":"动态代理：","slug":"动态代理","link":"#动态代理","children":[]},{"level":3,"title":"代理模式","slug":"代理模式","link":"#代理模式","children":[]},{"level":3,"title":"责任链模式","slug":"责任链模式","link":"#责任链模式","children":[]},{"level":3,"title":"迭代器模式","slug":"迭代器模式","link":"#迭代器模式","children":[]},{"level":3,"title":"空对象模式","slug":"空对象模式","link":"#空对象模式","children":[]},{"level":3,"title":"外观模式","slug":"外观模式","link":"#外观模式","children":[]},{"level":3,"title":"适配器模式","slug":"适配器模式","link":"#适配器模式","children":[]},{"level":3,"title":"模板方法模式","slug":"模板方法模式","link":"#模板方法模式","children":[]},{"level":3,"title":"原型模式","slug":"原型模式","link":"#原型模式","children":[]},{"level":3,"title":"过滤器模式","slug":"过滤器模式","link":"#过滤器模式","children":[]},{"level":3,"title":"组合模式","slug":"组合模式","link":"#组合模式","children":[]},{"level":3,"title":"享元模式","slug":"享元模式","link":"#享元模式","children":[]},{"level":3,"title":"单例模式","slug":"单例模式","link":"#单例模式","children":[]}]}],"git":{},"filePathRelative":"technology/architecture_design_analysis/design/design002.md"}');export{l as data};
