import{_ as i,r as l,o as c,c as p,a as s,b as a,w as t,d as n,e as r}from"./app-c1c3c937.js";const d={},u=s("h2",{id:"目录",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#目录","aria-hidden":"true"},"#"),n(" 目录")],-1),m={class:"table-of-contents"},v=s("h2",{id:"linux实现socks终端代理、全局代理",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#linux实现socks终端代理、全局代理","aria-hidden":"true"},"#"),n(" Linux实现socks终端代理、全局代理")],-1),k={href:"https://cloud.tencent.com/developer/article/1852590?ivk_sa=1024320u",target:"_blank",rel:"noopener noreferrer"},b={href:"https://neoctobers.readthedocs.io/en/latest/rpi/shadowsocksr_client.html",target:"_blank",rel:"noopener noreferrer"},h=r(`<h2 id="socks支持的代理协议" tabindex="-1"><a class="header-anchor" href="#socks支持的代理协议" aria-hidden="true">#</a> socks支持的代理协议</h2><p>socks运行在会话层，能代理TCP、UDP本身及基于它们之上的协议，如http/https over tcp，http3 over udp(quic)，无法代理icmp，因此你通过socks无法ping通谷歌，不要觉得是代理软件或节点的问题，是你的问题</p><h2 id="客户端安装" tabindex="-1"><a class="header-anchor" href="#客户端安装" aria-hidden="true">#</a> 客户端安装</h2><p>socks协议代理很多软件能够实现，本文讲述众所周知的ss/ssr代理，将shadowsocksR项目克隆到本地即可：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token builtin class-name">cd</span> /usr/share
 <span class="token function">git</span> clone https://github.com/RokasUrbelis/shadowsocksr 
 <span class="token builtin class-name">cd</span> ./shadowsocksr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>初始化环境：<code>bash initcfg.sh</code></p><p>客户端路径在<code>./shadowsocks/local.py</code></p><p>客户端配置文件：<code>user-config.json</code></p><h2 id="ssr-config-json-user-config-json配置格式" tabindex="-1"><a class="header-anchor" href="#ssr-config-json-user-config-json配置格式" aria-hidden="true">#</a> ssr-config.json/user-config.json配置格式</h2><p>ssr:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">{</span>
    <span class="token string">&quot;server&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;blog.linux-code.com&quot;</span>,
    <span class="token string">&quot;local_address&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;127.0.0.1&quot;</span>,
    <span class="token string">&quot;local_port&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1080</span>,
    <span class="token string">&quot;timeout&quot;</span><span class="token builtin class-name">:</span> <span class="token number">300</span>,
    <span class="token string">&quot;workers&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1</span>,
    <span class="token string">&quot;server_port&quot;</span><span class="token builtin class-name">:</span> <span class="token number">3071</span>,
    <span class="token string">&quot;password&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;test&quot;</span>,
    <span class="token string">&quot;method&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;rc4-md5&quot;</span>,
    <span class="token string">&quot;obfs&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;http_simple&quot;</span>,
    <span class="token string">&quot;obfs_param&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;download.linux-code.com&quot;</span>,
    <span class="token string">&quot;protocol&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;origin&quot;</span>,
    <span class="token string">&quot;protocol_param&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ss:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">{</span>
        <span class="token string">&quot;server&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;blog.linux-code.com&quot;</span>,
        <span class="token string">&quot;local_address&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;127.0.0.1&quot;</span>,
        <span class="token string">&quot;local_port&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1080</span>,
        <span class="token string">&quot;timeout&quot;</span><span class="token builtin class-name">:</span> <span class="token number">300</span>,
        <span class="token string">&quot;workers&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1</span>,
        <span class="token string">&quot;server_port&quot;</span><span class="token builtin class-name">:</span> <span class="token number">3071</span>,
        <span class="token string">&quot;password&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;test&quot;</span>,
        <span class="token string">&quot;method&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;rc4-md5&quot;</span>,
        <span class="token string">&quot;plugin&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="写sytemd服务" tabindex="-1"><a class="header-anchor" href="#写sytemd服务" aria-hidden="true">#</a> 写sytemd服务</h2><p>仅用于支持systemd服务的linux发行版，其他发行版请查阅相关发行版的服务管理软件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> ~/.config/systemd/user   <span class="token comment">#创建用于存放systemd服务目录</span>
$ <span class="token function">vim</span> ~/.config/systemd/user/ssr-client.service
<span class="token comment">## 写内容</span>
<span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>
<span class="token assign-left variable">Description</span><span class="token operator">=</span>Shadowsocks R Client Service
<span class="token assign-left variable">After</span><span class="token operator">=</span>default.target
<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/bin/python /usr/share/shadowsocksr/shadowsocks/local.py <span class="token parameter variable">-c</span> /usr/share/shadowsocksr/shadowsocks/user-config.json  <span class="token comment">#以你实际路径为准</span>
<span class="token assign-left variable">Restart</span><span class="token operator">=</span>on-abort
<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>
<span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>default.target

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过systemd管理服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ systemctl <span class="token parameter variable">--user</span> daemon-reload      <span class="token comment">#reload守护进程，写完systemd后执行一次即可，后续不需要执行</span>
$ systemctl <span class="token parameter variable">--user</span> status ssr-client  <span class="token comment">#查看运行状态</span>
$ systemctl <span class="token parameter variable">--user</span> start ssr-client   <span class="token comment">#重启ssr客户端</span>
$ systemctl <span class="token parameter variable">--user</span> restart ssr-client <span class="token comment">#重启ssr客户端</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果没有systemd服务也不想写成服务，你也可以使用懒人一行式：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token punctuation">{</span> <span class="token function">nohup</span> /usr/share/shadowsocksr/shadowsocks/local.py <span class="token parameter variable">-c</span> /usr/share/shadowsocksr/shadowsocks/user-config.json <span class="token operator">&amp;&gt;</span> /dev/null<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">&amp;</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">ssrstart</span><span class="token operator">=</span><span class="token string">&#39;{ nohup /usr/share/shadowsocksr/shadowsocks/local.py -c /usr/share/shadowsocksr/shadowsocks/user-config.json &amp;&gt; /dev/null; } &amp;&#39;</span> 

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="代理测试" tabindex="-1"><a class="header-anchor" href="#代理测试" aria-hidden="true">#</a> 代理测试</h2><p>服务正常运行后，使用如下命令临时测试下连通性：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">export</span> <span class="token assign-left variable">http_proxy</span><span class="token operator">=</span>http://127.0.0.1:1080
$ <span class="token builtin class-name">export</span> <span class="token assign-left variable">http_proxy</span><span class="token operator">=</span>https://127.0.0.1:1080   <span class="token comment">#export只针对你当前终端(pts/tty)有效，莫慌</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>想设置为全局代理，将上面两个命令加入到~/.bashrc即可，其他解释器放到各自的配置文件内，zsh则为~/.zshrc。</p><p>接下来访问谷歌看看:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ telnet google.com <span class="token number">80</span>
Trying <span class="token number">93.46</span>.8.90<span class="token punctuation">..</span>.
Connected to google.com.
Escape character is <span class="token string">&#39;^]&#39;</span><span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>能通，说明已经正常运行，且节点状态正常：</p><p>取消当前终端代理，使用<code>unset http_proxy https_proxy</code>即可</p>`,28);function g(q,f){const e=l("router-link"),o=l("ExternalLinkIcon");return c(),p("div",null,[u,s("nav",m,[s("ul",null,[s("li",null,[a(e,{to:"#目录"},{default:t(()=>[n("目录")]),_:1})]),s("li",null,[a(e,{to:"#linux实现socks终端代理、全局代理"},{default:t(()=>[n("Linux实现socks终端代理、全局代理")]),_:1})]),s("li",null,[a(e,{to:"#socks支持的代理协议"},{default:t(()=>[n("socks支持的代理协议")]),_:1})]),s("li",null,[a(e,{to:"#客户端安装"},{default:t(()=>[n("客户端安装")]),_:1})]),s("li",null,[a(e,{to:"#ssr-config-json-user-config-json配置格式"},{default:t(()=>[n("ssr-config.json/user-config.json配置格式")]),_:1})]),s("li",null,[a(e,{to:"#写sytemd服务"},{default:t(()=>[n("写sytemd服务")]),_:1})]),s("li",null,[a(e,{to:"#代理测试"},{default:t(()=>[n("代理测试")]),_:1})])])]),v,s("p",null,[s("a",k,[n("原文参考"),a(o)]),s("a",b,[n("参考"),a(o)])]),h])}const x=i(d,[["render",g],["__file","vpn02.html.vue"]]);export{x as default};
