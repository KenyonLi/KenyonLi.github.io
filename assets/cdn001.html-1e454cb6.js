import{_ as i,r as d,o as r,c as t,a as e,b as s,w as l,d as a,e as c}from"./app-c1c3c937.js";const o={},u=e("h2",{id:"目录",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#目录","aria-hidden":"true"},"#"),a(" 目录")],-1),h={class:"table-of-contents"},p=c(`<h2 id="cdn服务搭建" tabindex="-1"><a class="header-anchor" href="#cdn服务搭建" aria-hidden="true">#</a> CDN服务搭建</h2><h2 id="准备环境" tabindex="-1"><a class="header-anchor" href="#准备环境" aria-hidden="true">#</a> 准备环境</h2><ol><li>linux centos 7.6</li><li>squid</li><li>nginx</li></ol><h2 id="squid-安装" tabindex="-1"><a class="header-anchor" href="#squid-安装" aria-hidden="true">#</a> squid 安装</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> squid
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="squid-配置" tabindex="-1"><a class="header-anchor" href="#squid-配置" aria-hidden="true">#</a> squid 配置</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>http_port <span class="token number">3128</span> accel vhost vport
cache_peer <span class="token number">192.168</span>.44.7 parent <span class="token number">80</span> <span class="token number">0</span> originserver
cache_perr_access <span class="token number">192.168</span>.44.7 allow all
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cdn访问流程" tabindex="-1"><a class="header-anchor" href="#cdn访问流程" aria-hidden="true">#</a> CDN访问流程</h3><p>客户---&gt;nginx ---&gt; squid ---&gt; 源服务器<br> CDN服务器，是自动更新源服务器修改的内容。 步骤：</p><ol><li>客户点击</li><li>触发CDN</li><li>立马返回缓存的数据</li><li>异步请求源服务器。</li><li>将新的内容更新到CDN.替换原有的旧内容。</li></ol><p>懒加载方式：<br> CDN是如何存储源服务器内容。 1.依靠：缓存。CDN.高速缓存服务器。 基于内存操作</p><p>思考2：</p><ol><li>CDN 数据如何存储。 内存：如果CDN宕机。数据丢失问题。不能持久。 磁盘：为了数据持久化。 答案：CND基于缓存+磁盘存储数据。</li></ol><p>1、CDN搭建+内部原理过程<br> 2、应用CDN</p>`,14);function _(b,m){const n=d("router-link");return r(),t("div",null,[u,e("nav",h,[e("ul",null,[e("li",null,[s(n,{to:"#目录"},{default:l(()=>[a("目录")]),_:1})]),e("li",null,[s(n,{to:"#cdn服务搭建"},{default:l(()=>[a("CDN服务搭建")]),_:1})]),e("li",null,[s(n,{to:"#准备环境"},{default:l(()=>[a("准备环境")]),_:1})]),e("li",null,[s(n,{to:"#squid-安装"},{default:l(()=>[a("squid 安装")]),_:1}),e("ul",null,[e("li",null,[s(n,{to:"#squid-配置"},{default:l(()=>[a("squid 配置")]),_:1})]),e("li",null,[s(n,{to:"#cdn访问流程"},{default:l(()=>[a("CDN访问流程")]),_:1})])])])])]),p])}const f=i(o,[["render",_],["__file","cdn001.html.vue"]]);export{f as default};
