import{_ as i,r as d,o as r,c,a as e,b as n,w as l,d as a,e as t}from"./app-c1c3c937.js";const p={},u=e("h2",{id:"目录",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#目录","aria-hidden":"true"},"#"),a(" 目录")],-1),h={class:"table-of-contents"},b=t('<h2 id="abp-cli" tabindex="-1"><a class="header-anchor" href="#abp-cli" aria-hidden="true">#</a> ABP CLI</h2><div class="custom-container tip"><p class="custom-container-title">安装</p><blockquote><ul><li>ABP CLI (命令行接口) 是一个命令行工具,用来执行基于ABP解决方案的一些常见操作.</li></ul></blockquote></div><p>ABP CLI (命令行接口) 是一个命令行工具,用来执行基于ABP解决方案的一些常见操作.</p><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h2>',4),m={href:"https://docs.microsoft.com/en-us/dotnet/core/tools/global-tools",target:"_blank",rel:"noopener noreferrer"},v=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>dotnet tool <span class="token function">install</span> <span class="token parameter variable">-g</span> Volo.Abp.Cli
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Bash</p><p>Copy</p><p>更新最新版本:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>dotnet tool update <span class="token parameter variable">-g</span> Volo.Abp.Cli
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Bash</p><p>Copy</p><h2 id="全局选项" tabindex="-1"><a class="header-anchor" href="#全局选项" aria-hidden="true">#</a> 全局选项</h2><p>虽然每个命令可能都有一组选项,但有些全局选项可以与任何命令一起使用:</p><ul><li><code>--skip-cli-version-check</code>: 跳过检查最新版本的ABP CLI. 如果没有指定,它会检查最新版本,如果检查到ABP CLI的新版本,会显示一条警告消息.</li></ul><h2 id="commands" tabindex="-1"><a class="header-anchor" href="#commands" aria-hidden="true">#</a> Commands</h2><p>这里是所有可用的命令列表:</p>`,12),g=e("li",null,[e("strong",null,"help"),a(": 展示ABP CLI的用法帮助信息.")],-1),_=e("strong",null,"new",-1),x={href:"https://docs.abp.io/zh-Hans/abp/latest/Startup-Templates/Index",target:"_blank",rel:"noopener noreferrer"},k=e("li",null,[e("strong",null,"update"),a("：自动更新的ABP解决方案ABP相关的NuGet和NPM包.")],-1),f=e("li",null,[e("strong",null,"add-package"),a(": 添加ABP包到项目.")],-1),y=e("strong",null,"add-module",-1),w={href:"https://docs.abp.io/en/abp/latest/Modules/Index",target:"_blank",rel:"noopener noreferrer"},P=e("li",null,[e("strong",null,"generate-proxy"),a(": 生成客户端代理以使用HTTP API端点.")],-1),B=e("li",null,[e("strong",null,"remove-proxy"),a(": 移除以前生成的客户端代理.")],-1),A=e("li",null,[e("strong",null,"switch-to-preview"),a(": 切换到ABP框架的最新预览版本。")],-1),C=e("strong",null,"switch-to-nightly",-1),I={href:"https://docs.abp.io/zh-Hans/abp/latest/Nightly-Builds",target:"_blank",rel:"noopener noreferrer"},N=e("li",null,[e("strong",null,"switch-to-stable"),a(": 切换解决方案所有ABP相关包为最新的稳定版本.")],-1),M=e("li",null,[e("strong",null,"translate"),a(": 当源代码控制存储库中有多个JSON[本地化]（Localization.md文件时,可简化翻译本地化文件的过程.")],-1),L=e("strong",null,"login",-1),j={href:"https://abp.io/",target:"_blank",rel:"noopener noreferrer"},q=e("li",null,[e("strong",null,"logout"),a(": 在你的计算机注销认证.")],-1),z=e("li",null,[e("strong",null,"install-libs"),a(": 为 MVC / Razor Pages 和 Blazor Server UI 类型安装NPM包.")],-1),S=t(`<h3 id="help" tabindex="-1"><a class="header-anchor" href="#help" aria-hidden="true">#</a> help</h3><p>展示ABP CLI的基本用法:</p><p>用法:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>abp <span class="token builtin class-name">help</span> <span class="token punctuation">[</span>command-name<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Bash</p><p>Copy</p><p>示例:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>abp <span class="token builtin class-name">help</span>        <span class="token comment"># Shows a general help.</span>
abp <span class="token builtin class-name">help</span> new    <span class="token comment"># Shows help about the &quot;new&quot; command.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Bash</p><p>Copy</p><h3 id="new" tabindex="-1"><a class="header-anchor" href="#new" aria-hidden="true">#</a> new</h3>`,11),D={href:"https://docs.abp.io/zh-Hans/abp/latest/Startup-Templates/Index",target:"_blank",rel:"noopener noreferrer"},H=t(`<p>用法:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>abp new <span class="token operator">&lt;</span>解决方案名称<span class="token operator">&gt;</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Bash</p><p>Copy</p><p>示例:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>abp new Acme.BookStore
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Bash</p><p>Copy</p><ul><li>Acme.BookStore是解决方案的名称.</li><li>常见的命名方式类似于 <em>YourCompany.YourProject</em>. 不过你可以使用自己喜欢的方式,如 <em>YourProject</em> (单级命名空间) 或 <em>YourCompany.YourProduct.YourModule</em> (三级命名空间).</li></ul><h4 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h4>`,10),O=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>--template
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>-t
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>: 指定模板. 默认的模板是</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>app
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>,会生成web项目.可用的模板有:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>  app
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>(default): 应用程序模板 . 其他选项:</p>`,8),V=t(`<li><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>--ui
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>-u
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>: 指定ui框架.默认</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>mvc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>框架.其他选项:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>  mvc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>: ASP.NET Core MVC.此模板的其他选项:</p><ul><li><code>--tiered</code>: 创建分层解决方案,Web和Http Api层在物理上是分开的.如果未指定会创建一个分层的解决方案,此解决方案没有那么复杂,适合大多数场景.</li><li><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>angular
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>: Angular. 这个模板还有一些额外的选项: <ul><li><code>--separate-identity-server</code>: 将Identity Server应用程序与API host应用程序分开. 如果未指定,则服务器端将只有一个端点.</li></ul></li><li><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>blazor
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>: Blazor. 这个模板还有一些额外的选项: <ul><li><code>--separate-identity-server</code>: 将Identity Server应用程序与API host应用程序分开. 如果未指定,则服务器端将只有一个端点.</li></ul></li><li><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>none
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>: 无UI. 这个模板还有一些额外的选项: <ul><li><code>--separate-identity-server</code>: 将Identity Server应用程序与API host应用程序分开. 如果未指定,则服务器端将只有一个端点.</li></ul></li></ul></li><li><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>--mobile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>-m
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>: 指定移动应用程序框架. 如果未指定,则不会创建任何移动应用程序,其他选项:</p><ul><li><code>none</code>: 不包含移动应用程序.</li><li><code>react-native</code>: React Native.</li></ul></li><li><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>--database-provider
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>-d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>: 指定数据库提供程序.默认是</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ef
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>.其他选项:</p><ul><li><code>ef</code>: Entity Framework Core.</li><li><code>mongodb</code>: MongoDB.</li></ul></li><li><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>module
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>: Module template . 其他选项:</p><ul><li><code>--no-ui</code>: 不包含UI.仅创建服务模块(也称为微服务 - 没有UI).</li></ul></li>`,4),T=e("strong",null,"console",-1),E={href:"https://docs.abp.io/zh-Hans/abp/latest/Startup-Templates/Console",target:"_blank",rel:"noopener noreferrer"},K=e("li",null,[e("p",null,[e("code",null,"--output-folder"),a(" 或者 "),e("code",null,"-o"),a(": 指定输出文件夹,默认是当前目录.")])],-1),U=e("code",null,"--version",-1),W=e("code",null,"-v",-1),Y={href:"https://github.com/abpframework/abp/releases",target:"_blank",rel:"noopener noreferrer"},R={href:"https://github.com/abpframework/abp/branches",target:"_blank",rel:"noopener noreferrer"},G=t("<li><p><code>--preview</code>: 使用最新的预览版本.</p></li><li><p><code>--template-source</code> 或者 <code>-ts</code>: 指定自定义模板源用于生成项目,可以使用本地源和网络源(例如 <code>D:\\local-templat</code> 或 <code>https://.../my-template-file.zip</code>).</p></li><li><p><code>--create-solution-folder</code> 或者 <code>-csf</code>: 指定项目是在输出文件夹中的新文件夹中还是直接在输出文件夹中.</p></li>",3),F=e("code",null,"--connection-string",-1),J=e("code",null,"-cs",-1),Q=e("code",null,"appsettings.json",-1),X=e("code",null,"Server=localhost;Database=MyProjectName;Trusted_Connection=True",-1),Z=e("code",null,"SQL Server",-1),$={href:"https://docs.abp.io/zh-Hans/abp/latest/Entity-Framework-Core-Other-DBMS",target:"_blank",rel:"noopener noreferrer"},ee=e("li",null,[e("p",null,[e("code",null,"--local-framework-ref --abp-path"),a(": 使用对项目的本地引用,而不是替换为NuGet包引用.")])],-1),ae=t(`<h3 id="update" tabindex="-1"><a class="header-anchor" href="#update" aria-hidden="true">#</a> update</h3><p>更新所有ABP相关的包可能会很繁琐,框架和模块都有很多包. 此命令自动将解决方案或项目中所有ABP相关的包更新到最新版本. 用法:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>abp update <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Bash Copy</p><ul><li>如果你的文件夹中有.sln文件,运行命令会将解决方案中所有项目ABP相关的包更新到最新版本.</li><li>如果你的文件夹中有.csproj文件,运行命令会将项目中所有ABP相关的包更新到最新版本.</li></ul><h4 id="options-1" tabindex="-1"><a class="header-anchor" href="#options-1" aria-hidden="true">#</a> Options</h4><ul><li><code>--npm</code>: 仅更新NPM包</li><li><code>--nuget</code>: 仅更新的NuGet包</li><li><code>--solution-path</code> 或 <code>-sp</code>: 指定解决方案路径/目录. 默认使用当前目录</li><li><code>--solution-name</code> 或 <code>-sn</code>: 指定解决方案名称. 默认在目录中搜索<code>*.sln</code>文件.</li><li><code>--check-all</code>: 分别检查每个包的新版本. 默认是 <code>false</code>.</li><li><code>--version</code> or <code>-v</code>: 指定用于升级的版本. 如果没有指定,则使用最新版本.</li></ul><h3 id="add-package" tabindex="-1"><a class="header-anchor" href="#add-package" aria-hidden="true">#</a> add-package</h3><p>通过以下方式将ABP包添加到项目中</p>`,9),ne=e("li",null,"添加nuget包做为项目的依赖项目.",-1),se=e("code",null,"[DependsOn(...)]",-1),le={href:"https://docs.abp.io/zh-Hans/abp/latest/Module-Development-Basics",target:"_blank",rel:"noopener noreferrer"},oe=t(`<blockquote><p>需要注意的是添加的模块可能需要额外的配置,通常会在包的文档中指出. 用法:</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>abp add-package <span class="token operator">&lt;</span>包名<span class="token operator">&gt;</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Bash Copy 示例:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>abp add-package Volo.Abp.MongoDB
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>示例中将Volo.Abp.MongoDB包添加到项目中.</li></ul><h4 id="options-2" tabindex="-1"><a class="header-anchor" href="#options-2" aria-hidden="true">#</a> Options</h4><ul><li><code>--project</code> 或 <code>-p</code>: 指定项目 (.csproj) 路径. 如果未指定,Cli会尝试在当前目录查找.csproj文件.</li><li><code>--with-source-code</code>: 下载包的源码到你的解决方案文件夹，而不是NuGet/NPM软件包.</li><li><code>--add-to-solution-file</code>: 添加下载/创建的包添加到解决方案文件中,你在IDE中打开解决方案时也会看到包的项目. (仅当 <code>--with-source-code</code> 为 <code>True</code> 时可用.)</li></ul><h3 id="add-module" tabindex="-1"><a class="header-anchor" href="#add-module" aria-hidden="true">#</a> add-module</h3>`,8),te={href:"https://docs.abp.io/zh-Hans/abp/latest/Modules/Index",target:"_blank",rel:"noopener noreferrer"},de=t(`<blockquote><p>由于分层,不同的数据库提供程序选项或其他原因,业务模块通常由多个包组成. 使用<code>add-module</code>命令可以大大简化向模块添加模块的过程. 但是每个模块可能需要一些其他配置,这些配置通常在相关模块的文档中指出. 用法:</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>abp add-module <span class="token operator">&lt;</span>模块名称<span class="token operator">&gt;</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Bash Copy 示例:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>abp add-module Volo.Blogging
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Bash Copy</p><ul><li>示例中将Volo.Blogging模块添加到解决方案中.</li></ul><h4 id="options-3" tabindex="-1"><a class="header-anchor" href="#options-3" aria-hidden="true">#</a> Options</h4><ul><li><code>--solution</code> 或 <code>-s</code>: 指定解决方案 (.sln) 路径. 如果未指定,CLI会尝试在当前目录中寻找.sln文件.</li><li><code>--skip-db-migrations</code>: 对于EF Core 数据库提供程序,它会自动添加新代码的第一次迁移 (<code>Add-Migration</code>) 并且在需要时更新数据库 (<code>Update-Database</code>). 指定此选项可跳过此操作.</li><li><code>-sp</code> 或 <code>--startup-project</code>: 启动项目的项目文件夹的相对路径. 默认值是当前文件夹.</li><li><code>--with-source-code</code>: 添加模块的源代码,而不是NuGet/NPM软件包.</li><li><code>--add-to-solution-file</code>: 添加下载/创建的模块添加到解决方案文件中,你在IDE中打开解决方案时也会看到模块的项目. (仅当 <code>--with-source-code</code> 为 <code>True</code> 时可用.)</li></ul><h3 id="generate-proxy" tabindex="-1"><a class="header-anchor" href="#generate-proxy" aria-hidden="true">#</a> generate-proxy</h3><p>为您的HTTP API生成Angular服务代理,简化从客户端使用服务的成本. 在运行此命令之前,你的host必须启动正在运行. 用法:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>abp generate-proxy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Bash Copy</p><h4 id="options-4" tabindex="-1"><a class="header-anchor" href="#options-4" aria-hidden="true">#</a> Options</h4><ul><li><code>--module</code> 或 <code>-m</code>: 指定要为其生成代理的后端模块的名称. 默认值: <code>app</code>.</li><li><code>--api-name</code> 或 <code>-a</code>: 在 <code>/src/environments/environment.ts</code> 中定义的API端点名称。. 默认值: <code>default</code>.</li><li><code>--source</code> 或 <code>-s</code>: 指定解析根名称空间和API定义URL的Angular项目名称. 默认值: <code>defaultProject</code></li><li><code>--target</code> 或 <code>-t</code>: 指定放置生成的代码的Angular项目名称. 默认值: <code>defaultProject</code>.</li><li><code>--prompt</code> 或 <code>-p</code>: 在命令行提示符下询问选项(未指定的选项).</li></ul>`,14),ie={href:"https://docs.abp.io/zh-Hans/abp/latest/UI/Angular/Service-Proxies",target:"_blank",rel:"noopener noreferrer"},re=t(`<h3 id="remove-proxy" tabindex="-1"><a class="header-anchor" href="#remove-proxy" aria-hidden="true">#</a> remove-proxy</h3><p>从Angular应用程序中删除以前生成的代理代码. 在运行此命令之前,你的host必须启动正在运行.</p><p>This can be especially useful when you generate proxies for multiple modules before and need to remove one of them later.</p><p>Usage:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>abp remove-proxy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Bash</p><p>Copy</p><h4 id="options-5" tabindex="-1"><a class="header-anchor" href="#options-5" aria-hidden="true">#</a> Options</h4><ul><li><code>--module</code> 或 <code>-m</code>: 指定要为其生成代理的后端模块的名称. 默认值: <code>app</code>.</li><li><code>--api-name</code> 或 <code>-a</code>: 在 <code>/src/environments/environment.ts</code> 中定义的API端点名称。. 默认值: <code>default</code>.</li><li><code>--source</code> 或 <code>-s</code>: 指定解析根名称空间和API定义URL的Angular项目名称. 默认值: <code>defaultProject</code></li><li><code>--target</code> 或 <code>-t</code>: 指定放置生成的代码的Angular项目名称. 默认值: <code>defaultProject</code>.</li><li><code>--prompt</code> 或 <code>-p</code>: 在命令行提示符下询问选项(未指定的选项).</li></ul>`,9),ce={href:"https://docs.abp.io/zh-Hans/abp/latest/UI/Angular/Service-Proxies",target:"_blank",rel:"noopener noreferrer"},pe=t(`<h3 id="switch-to-preview" tabindex="-1"><a class="header-anchor" href="#switch-to-preview" aria-hidden="true">#</a> switch-to-preview</h3><p>你可以使用此命令将项目切换到ABP框架的最新预览版本.</p><p>用法:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>abp switch-to-preview <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Bash</p><p>Copy</p><h4 id="options-6" tabindex="-1"><a class="header-anchor" href="#options-6" aria-hidden="true">#</a> Options</h4><ul><li><code>--solution-directory</code> 或 <code>-sd</code>: 指定目录. 解决方案应该在该目录或其子目录中. 如果未指定默认为当前目录.</li></ul><h3 id="switch-to-nightly" tabindex="-1"><a class="header-anchor" href="#switch-to-nightly" aria-hidden="true">#</a> switch-to-nightly</h3>`,9),ue={href:"https://docs.abp.io/zh-Hans/abp/latest/Nightly-Builds",target:"_blank",rel:"noopener noreferrer"},he=t(`<p>用法:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>abp switch-to-nightly <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Bash</p><p>Copy</p><h4 id="options-7" tabindex="-1"><a class="header-anchor" href="#options-7" aria-hidden="true">#</a> Options</h4><p><code>--solution-directory</code> 或 <code>-sd</code>: 指定目录. 解决方案应该在该目录或其子目录中. 如果未指定默认为当前目录.</p><h3 id="switch-to-stable" tabindex="-1"><a class="header-anchor" href="#switch-to-stable" aria-hidden="true">#</a> switch-to-stable</h3><p>如果你使用的是ABP框架预览包(包括每晚构建),可以使用此命令切换回最新的稳定版本.</p><p>用法:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>abp switch-to-stable <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Bash</p><p>Copy</p><h4 id="options-8" tabindex="-1"><a class="header-anchor" href="#options-8" aria-hidden="true">#</a> Options</h4><p><code>--solution-directory</code> 或 <code>-sd</code>: 指定目录. 解决方案应该在该目录或其子目录中. 如果未指定默认为当前目录.</p><h3 id="translate" tabindex="-1"><a class="header-anchor" href="#translate" aria-hidden="true">#</a> translate</h3>`,15),be={href:"https://docs.abp.io/zh-Hans/abp/latest/Localization",target:"_blank",rel:"noopener noreferrer"},me={href:"https://docs.abp.io/zh-Hans/abp/latest/Localization",target:"_blank",rel:"noopener noreferrer"},ve=e("ul",null,[e("li",null,"该命令将基于参考文化创建一个统一的json文件"),e("li",null,'它搜索当前目录和所有子目录中的所有本地化"JSON"文件(递归). 然后创建一个包含所有需要翻译的条目的文件(默认情况下名为 "abp-translation.json").'),e("li",null,[a("翻译了此文件中的条目后,你就可以使用 "),e("code",null,"--apply"),a(" 命令将更改应用于原始本地化文件.")])],-1),ge={href:"https://github.com/abpframework/abp",target:"_blank",rel:"noopener noreferrer"},_e=t(`<h4 id="创建翻译文件" tabindex="-1"><a class="header-anchor" href="#创建翻译文件" aria-hidden="true">#</a> 创建翻译文件</h4><p>第一步是创建统一的翻译文件:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>abp translate <span class="token parameter variable">-c</span> <span class="token operator">&lt;</span>culture<span class="token operator">&gt;</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Bash Copy</p><p>示例:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>abp translate <span class="token parameter variable">-c</span> de-DE
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Bash</p><p>Copy</p><p>该命令为 <code>de-DE</code> (德语)文化创建了统一的翻译文件.</p><h5 id="附加选项" tabindex="-1"><a class="header-anchor" href="#附加选项" aria-hidden="true">#</a> 附加选项</h5><ul><li><code>--reference-culture</code> 或 <code>-r</code>: 默认值 <code>en</code>. 指定参考文化.</li><li><code>--output</code> 或 <code>-o</code>: 输出文件名. 默认值 <code>abp-translation.json</code>.</li><li><code>--all-values</code> 或 <code>-all</code>: 包括所有要翻译的键. 默认情况下,统一翻译文件仅包含目标文化的缺失文本. 如果你可能需要修改之前已经翻译的值,请指定此参数.</li></ul><h4 id="应用更改" tabindex="-1"><a class="header-anchor" href="#应用更改" aria-hidden="true">#</a> 应用更改</h4><p>翻译完统一翻译文件中的条目后,你可以使用 <code>--apply</code> 参数将更改应用于原始本地化文件:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>abp translate <span class="token parameter variable">--apply</span>  <span class="token comment"># apply all changes</span>
abp translate <span class="token parameter variable">-a</span>       <span class="token comment"># shortcut for --apply</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Bash</p><p>Copy</p><p>然后,检查源代码控制系统上的更改,以确保它已更改了正确的文件. 如果你翻译了ABP框架资源, 请发送 &quot;Pull Request&quot;. 提前感谢你的贡献.</p><h5 id="附加选项-1" tabindex="-1"><a class="header-anchor" href="#附加选项-1" aria-hidden="true">#</a> 附加选项</h5><ul><li><code>--file</code> 或 <code>-f</code>: 默认值: <code>abp-translation.json</code>. 翻译文件(仅在之前使用过 <code>--output</code> 选项时使用).</li></ul><h3 id="login" tabindex="-1"><a class="header-anchor" href="#login" aria-hidden="true">#</a> login</h3><p>CLI的一些功能需要登录到abp.io平台. 使用你的用户名登录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>abp login <span class="token operator">&lt;</span>username<span class="token operator">&gt;</span>                                  <span class="token comment"># Allows you to enter your password hidden</span>
abp login <span class="token operator">&lt;</span>username<span class="token operator">&gt;</span> <span class="token parameter variable">-p</span> <span class="token operator">&lt;</span>password<span class="token operator">&gt;</span>                    <span class="token comment"># Specify the password as a parameter (password is visible)</span>
abp login <span class="token operator">&lt;</span>username<span class="token operator">&gt;</span> <span class="token parameter variable">--organization</span> <span class="token operator">&lt;</span>organization<span class="token operator">&gt;</span>    <span class="token comment"># If you have multiple organizations, you need set your active organization</span>
abp login <span class="token operator">&lt;</span>username<span class="token operator">&gt;</span> <span class="token parameter variable">-p</span> <span class="token operator">&lt;</span>password<span class="token operator">&gt;</span> <span class="token parameter variable">-o</span> <span class="token operator">&lt;</span>organization<span class="token operator">&gt;</span>  <span class="token comment"># You can enter both your password and organization in the same command</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Bash</p><p>Copy</p><blockquote><p>当使用-p参数,请注意,因为你的密码是可见的. 它对于CI / CD自动化管道很有用.</p></blockquote><p>请注意,新的登录将终止先前的会话并创建一个新的会话.</p><h3 id="logout" tabindex="-1"><a class="header-anchor" href="#logout" aria-hidden="true">#</a> logout</h3><p>通过从计算机中删除会话令牌来注销.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>abp logout
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="install-libs" tabindex="-1"><a class="header-anchor" href="#install-libs" aria-hidden="true">#</a> install-libs</h3><p>为 MVC / Razor Pages 和 Blazor Server UI 类型安装NPM包, 它的 <strong>执行目录</strong> 或者传递的 <code>--working-directory</code> 目录必须包含一个项目文件(*.csproj).</p>`,31),xe=e("code",null,"install-libs",-1),ke=e("code",null,"abp.resourcemapping.js",-1),fe={href:"https://docs.abp.io/zh-Hans/abp/latest/UI/AspNetCore/Client-Side-Package-Management",target:"_blank",rel:"noopener noreferrer"},ye=t(`<p>用法:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>abp install-libs <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Bash</p><p>Copy</p><h4 id="options-9" tabindex="-1"><a class="header-anchor" href="#options-9" aria-hidden="true">#</a> Options</h4><ul><li><code>--working-directory</code> 或 <code>-wd</code>: 指定工作目录, 当执行目录不包含项目文件时会很有用.</li></ul><div class="custom-container tip"><p class="custom-container-title">CLI 创建不同应用</p></div><h4 id="_1、web模板项目创建" tabindex="-1"><a class="header-anchor" href="#_1、web模板项目创建" aria-hidden="true">#</a> 1、web模板项目创建</h4><p>默认MVC项目</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>abp new LKN.Project.Web <span class="token parameter variable">-o</span> D:<span class="token punctuation">\\</span>abp<span class="token punctuation">\\</span>LKN.Project.Web
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Mysql mvc 项目</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>abp new LKN.Project.Web <span class="token parameter variable">--dbms</span> mysql <span class="token parameter variable">-o</span> D:<span class="token punctuation">\\</span>abp<span class="token punctuation">\\</span>LKN.Project.Web
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Mysql Web api 项目</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>abp new LKN.Project.Web <span class="token parameter variable">--dbms</span> mysql <span class="token parameter variable">-u</span> none <span class="token parameter variable">-o</span>  D:<span class="token punctuation">\\</span>abp<span class="token punctuation">\\</span>LKN.Project.Web.Api
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2、console模板项目创建" tabindex="-1"><a class="header-anchor" href="#_2、console模板项目创建" aria-hidden="true">#</a> 2、console模板项目创建</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>abp new LKN.Project.Console -t console -o D:\\abp\\LKN.Project.Console
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_3、module模板项目创建" tabindex="-1"><a class="header-anchor" href="#_3、module模板项目创建" aria-hidden="true">#</a> 3、Module模板项目创建</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>abp new LKN.Project.Module <span class="token parameter variable">-t</span> module <span class="token parameter variable">-o</span> D:<span class="token punctuation">\\</span>abp<span class="token punctuation">\\</span>LKN.Project.Module
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_4、module模板项目创建-添加-mysql" tabindex="-1"><a class="header-anchor" href="#_4、module模板项目创建-添加-mysql" aria-hidden="true">#</a> 4、Module模板项目创建 添加 mysql</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> abp new LKN.AuthMicroService <span class="token parameter variable">-t</span> module <span class="token parameter variable">--dbms</span> mysql -no-ui  <span class="token parameter variable">-o</span>  moduls<span class="token punctuation">\\</span>LKN.AuthMicroService <span class="token parameter variable">-v</span> <span class="token number">7.3</span>.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="什么是框架" tabindex="-1"><a class="header-anchor" href="#什么是框架" aria-hidden="true">#</a> 什么是框架</h2><h3 id="组件" tabindex="-1"><a class="header-anchor" href="#组件" aria-hidden="true">#</a> 组件</h3><p>组件就是规范，如IOC,redis,mysql mongodb 取一个共同的名字就框架</p><blockquote><p>什么是Asp.Net Core Web 应用程序框架<br> Module : 模块化<br> 架构师条件</p><blockquote><p>必须要会抽象<br> 目的：为了快速开发web应用程序</p></blockquote></blockquote><h3 id="net-7-console项目中如何使用module" tabindex="-1"><a class="header-anchor" href="#net-7-console项目中如何使用module" aria-hidden="true">#</a> .net 7 console项目中如何使用Module</h3><p>条件<br> 1、 Volo.Abp.Core 2、 继承AbpModule</p>`,26);function we(Pe,Be){const s=d("router-link"),o=d("ExternalLinkIcon");return r(),c("div",null,[u,e("nav",h,[e("ul",null,[e("li",null,[n(s,{to:"#目录"},{default:l(()=>[a("目录")]),_:1})]),e("li",null,[n(s,{to:"#abp-cli"},{default:l(()=>[a("ABP CLI")]),_:1})]),e("li",null,[n(s,{to:"#installation"},{default:l(()=>[a("Installation")]),_:1})]),e("li",null,[n(s,{to:"#全局选项"},{default:l(()=>[a("全局选项")]),_:1})]),e("li",null,[n(s,{to:"#commands"},{default:l(()=>[a("Commands")]),_:1}),e("ul",null,[e("li",null,[n(s,{to:"#help"},{default:l(()=>[a("help")]),_:1})]),e("li",null,[n(s,{to:"#new"},{default:l(()=>[a("new")]),_:1})]),e("li",null,[n(s,{to:"#update"},{default:l(()=>[a("update")]),_:1})]),e("li",null,[n(s,{to:"#add-package"},{default:l(()=>[a("add-package")]),_:1})]),e("li",null,[n(s,{to:"#add-module"},{default:l(()=>[a("add-module")]),_:1})]),e("li",null,[n(s,{to:"#generate-proxy"},{default:l(()=>[a("generate-proxy")]),_:1})]),e("li",null,[n(s,{to:"#remove-proxy"},{default:l(()=>[a("remove-proxy")]),_:1})]),e("li",null,[n(s,{to:"#switch-to-preview"},{default:l(()=>[a("switch-to-preview")]),_:1})]),e("li",null,[n(s,{to:"#switch-to-nightly"},{default:l(()=>[a("switch-to-nightly")]),_:1})]),e("li",null,[n(s,{to:"#switch-to-stable"},{default:l(()=>[a("switch-to-stable")]),_:1})]),e("li",null,[n(s,{to:"#translate"},{default:l(()=>[a("translate")]),_:1})]),e("li",null,[n(s,{to:"#login"},{default:l(()=>[a("login")]),_:1})]),e("li",null,[n(s,{to:"#logout"},{default:l(()=>[a("logout")]),_:1})]),e("li",null,[n(s,{to:"#install-libs"},{default:l(()=>[a("install-libs")]),_:1})])])]),e("li",null,[n(s,{to:"#什么是框架"},{default:l(()=>[a("什么是框架")]),_:1}),e("ul",null,[e("li",null,[n(s,{to:"#组件"},{default:l(()=>[a("组件")]),_:1})]),e("li",null,[n(s,{to:"#net-7-console项目中如何使用module"},{default:l(()=>[a(".net 7 console项目中如何使用Module")]),_:1})])])])])]),b,e("p",null,[a("ABP CLI 是一个 "),e("a",m,[a("dotnet global tool"),n(o)]),a(". 使用命令行窗口安装:")]),v,e("ul",null,[g,e("li",null,[_,a("：生成基于ABP的"),e("a",x,[a("启动模板"),n(o)]),a(".")]),k,f,e("li",null,[y,a(": 添加"),e("a",w,[a("应用模块"),n(o)]),a("到解决方案.")]),P,B,A,e("li",null,[C,a(": 切换解决方案所有ABP相关包为"),e("a",I,[a("夜间构建"),n(o)]),a("版本.")]),N,M,e("li",null,[L,a(": 使用你在"),e("a",j,[a("abp.io"),n(o)]),a("的用户名和密码在你的计算机上认证.")]),q,z]),S,e("p",null,[a("生成基于ABP"),e("a",D,[a("启动模板"),n(o)]),a("的新解决方案.")]),H,e("ul",null,[e("li",null,[O,e("ul",null,[V,e("li",null,[e("p",null,[T,a(": "),e("a",E,[a("Console template"),n(o)]),a(".")])])])]),K,e("li",null,[e("p",null,[U,a(" 或者 "),W,a(": 指定ABP和模板的版本.它可以是 "),e("a",Y,[a("release tag"),n(o)]),a(" 或者 "),e("a",R,[a("branch name"),n(o)]),a(". 如果没有指定,则使用最新版本.大多数情况下,你会希望使用最新的版本.")])]),G,e("li",null,[e("p",null,[F,a(" 或者 "),J,a(": 重写所有 "),Q,a(" 文件的默认连接字符串. 默认连接字符串是 "),X,a(". 默认的数据库提供程序是 "),Z,a(". 如果你使用EF Core但需要更改DBMS,可以按"),e("a",$,[a("这里所述"),n(o)]),a("进行更改(创建解决方案之后).")])]),ee]),ae,e("ul",null,[ne,e("li",null,[a("添加 "),se,a(" attribute到项目的模块类 (请参阅 "),e("a",le,[a("模块开发文档"),n(o)]),a(").")])]),oe,e("p",null,[a("通过查找模块的所有包,查找解决方案中的相关项目,并将每个包添加到解决方案中的相应项目,从而将"),e("a",te,[a("多包应用程序模块"),n(o)]),a("添加到解决方案中.")]),de,e("blockquote",null,[e("p",null,[a("参阅 "),e("a",ie,[a("Angular服务代理文档"),n(o)]),a(" 了解更多.")])]),re,e("blockquote",null,[e("p",null,[a("参阅 "),e("a",ce,[a("Angular服务代理文档"),n(o)]),a(" 了解更多.")])]),pe,e("p",null,[a("想要切换到ABP框架的最新"),e("a",ue,[a("每晚构建"),n(o)]),a("预览版可以使用此命令.")]),he,e("p",null,[a("源代码控制存储库中有多个JSON"),e("a",be,[a("本地化"),n(o)]),a("文件时,用于简化翻译"),e("a",me,[a("本地化"),n(o)]),a("文件的过程.")]),ve,e("blockquote",null,[e("p",null,[a("该命令的主要目的是翻译ABP框架本地化文件(因为"),e("a",ge,[a("abp仓库"),n(o)]),a("包括数十个要在不同目录中转换的本地化文件).")])]),_e,e("p",null,[xe,a(" 命令读取 "),ke,a(" 来管理包. 参阅"),e("a",fe,[a("客户端包管理"),n(o)]),a("了解更多细节.")]),ye])}const Ce=i(p,[["render",we],["__file","abp001.html.vue"]]);export{Ce as default};
